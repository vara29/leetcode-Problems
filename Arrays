Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number.The tests are generated such that there is exactly one solution. 
You may not use the same element twice. Your solution must use only constant extra space.

Example 1:
Input: numbers = [2,7,11,15], target = 9
Output: [1,2]
Explanation: The sum of 2 and 7 is 9. Therefore, index1 = 1, index2 = 2. We return [1, 2].


Example 2:
Input: numbers = [-1,0], target = -1
Output: [1,2]
Explanation: The sum of -1 and 0 is -1. Therefore index1 = 1, index2 = 2. We return [1, 2].

SOLUTION:
###############
class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        
            low, high = 0, len(numbers)-1
            while low < high:
                num = numbers[low] + numbers[high]
                if num == target:
                    return [low+1, high+1]
                elif num < target:
                     low += 1
                else:
                    high -= 1

            return []
 ###########################################################################################
 
